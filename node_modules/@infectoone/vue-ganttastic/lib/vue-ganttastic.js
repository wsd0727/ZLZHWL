import z from "dayjs";
import { inject as lt, computed as R, defineComponent as q, openBlock as M, createElementBlock as L, createElementVNode as j, Fragment as K, renderList as ot, unref as C, normalizeStyle as P, renderSlot as H, createTextVNode as it, toDisplayString as Q, createCommentVNode as X, toRefs as Z, ref as $, watch as ut, nextTick as St, createBlock as st, Teleport as Kt, createVNode as wt, Transition as Qt, withCtx as V, getCurrentScope as Xt, onScopeDispose as Zt, getCurrentInstance as Jt, onMounted as Tt, useSlots as te, provide as rt, withModifiers as ee, mergeProps as ne, TransitionGroup as ae } from "vue";
var ct = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {}, Lt = { exports: {} };
(function(t, r) {
  (function(n, u) {
    t.exports = u();
  })(ct, function() {
    return function(n, u) {
      u.prototype.isSameOrBefore = function(d, s) {
        return this.isSame(d, s) || this.isBefore(d, s);
      };
    };
  });
})(Lt);
const re = Lt.exports;
var $t = { exports: {} };
(function(t, r) {
  (function(n, u) {
    t.exports = u();
  })(ct, function() {
    return function(n, u) {
      u.prototype.isSameOrAfter = function(d, s) {
        return this.isSame(d, s) || this.isAfter(d, s);
      };
    };
  });
})($t);
const oe = $t.exports;
var Gt = { exports: {} };
(function(t, r) {
  (function(n, u) {
    t.exports = u();
  })(ct, function() {
    return function(n, u, d) {
      u.prototype.isBetween = function(s, l, g, f) {
        var e = d(s), o = d(l), i = (f = f || "()")[0] === "(", h = f[1] === ")";
        return (i ? this.isAfter(e, g) : !this.isBefore(e, g)) && (h ? this.isBefore(o, g) : !this.isAfter(o, g)) || (i ? this.isBefore(e, g) : !this.isAfter(e, g)) && (h ? this.isAfter(o, g) : !this.isBefore(o, g));
      };
    };
  });
})(Gt);
const ie = Gt.exports;
var It = { exports: {} };
(function(t, r) {
  (function(n, u) {
    t.exports = u();
  })(ct, function() {
    var n = { LTS: "h:mm:ss A", LT: "h:mm A", L: "MM/DD/YYYY", LL: "MMMM D, YYYY", LLL: "MMMM D, YYYY h:mm A", LLLL: "dddd, MMMM D, YYYY h:mm A" }, u = /(\[[^[]*\])|([-_:/.,()\s]+)|(A|a|YYYY|YY?|MM?M?M?|Do|DD?|hh?|HH?|mm?|ss?|S{1,3}|z|ZZ?)/g, d = /\d\d/, s = /\d\d?/, l = /\d*[^-_:/,()\s\d]+/, g = {}, f = function(p) {
      return (p = +p) + (p > 68 ? 1900 : 2e3);
    }, e = function(p) {
      return function(b) {
        this[p] = +b;
      };
    }, o = [/[+-]\d\d:?(\d\d)?|Z/, function(p) {
      (this.zone || (this.zone = {})).offset = function(b) {
        if (!b || b === "Z")
          return 0;
        var _ = b.match(/([+-]|\d\d)/g), v = 60 * _[1] + (+_[2] || 0);
        return v === 0 ? 0 : _[0] === "+" ? -v : v;
      }(p);
    }], i = function(p) {
      var b = g[p];
      return b && (b.indexOf ? b : b.s.concat(b.f));
    }, h = function(p, b) {
      var _, v = g.meridiem;
      if (v) {
        for (var m = 1; m <= 24; m += 1)
          if (p.indexOf(v(m, 0, b)) > -1) {
            _ = m > 12;
            break;
          }
      } else
        _ = p === (b ? "pm" : "PM");
      return _;
    }, w = { A: [l, function(p) {
      this.afternoon = h(p, !1);
    }], a: [l, function(p) {
      this.afternoon = h(p, !0);
    }], S: [/\d/, function(p) {
      this.milliseconds = 100 * +p;
    }], SS: [d, function(p) {
      this.milliseconds = 10 * +p;
    }], SSS: [/\d{3}/, function(p) {
      this.milliseconds = +p;
    }], s: [s, e("seconds")], ss: [s, e("seconds")], m: [s, e("minutes")], mm: [s, e("minutes")], H: [s, e("hours")], h: [s, e("hours")], HH: [s, e("hours")], hh: [s, e("hours")], D: [s, e("day")], DD: [d, e("day")], Do: [l, function(p) {
      var b = g.ordinal, _ = p.match(/\d+/);
      if (this.day = _[0], b)
        for (var v = 1; v <= 31; v += 1)
          b(v).replace(/\[|\]/g, "") === p && (this.day = v);
    }], M: [s, e("month")], MM: [d, e("month")], MMM: [l, function(p) {
      var b = i("months"), _ = (i("monthsShort") || b.map(function(v) {
        return v.slice(0, 3);
      })).indexOf(p) + 1;
      if (_ < 1)
        throw new Error();
      this.month = _ % 12 || _;
    }], MMMM: [l, function(p) {
      var b = i("months").indexOf(p) + 1;
      if (b < 1)
        throw new Error();
      this.month = b % 12 || b;
    }], Y: [/[+-]?\d+/, e("year")], YY: [d, function(p) {
      this.year = f(p);
    }], YYYY: [/\d{4}/, e("year")], Z: o, ZZ: o };
    function E(p) {
      var b, _;
      b = p, _ = g && g.formats;
      for (var v = (p = b.replace(/(\[[^\]]+])|(LTS?|l{1,4}|L{1,4})/g, function(D, O, S) {
        var k = S && S.toUpperCase();
        return O || _[S] || n[S] || _[k].replace(/(\[[^\]]+])|(MMMM|MM|DD|dddd)/g, function(T, G, I) {
          return G || I.slice(1);
        });
      })).match(u), m = v.length, a = 0; a < m; a += 1) {
        var c = v[a], y = w[c], B = y && y[0], x = y && y[1];
        v[a] = x ? { regex: B, parser: x } : c.replace(/^\[|\]$/g, "");
      }
      return function(D) {
        for (var O = {}, S = 0, k = 0; S < m; S += 1) {
          var T = v[S];
          if (typeof T == "string")
            k += T.length;
          else {
            var G = T.regex, I = T.parser, et = D.slice(k), F = G.exec(et)[0];
            I.call(O, F), D = D.replace(F, "");
          }
        }
        return function(U) {
          var Y = U.afternoon;
          if (Y !== void 0) {
            var N = U.hours;
            Y ? N < 12 && (U.hours += 12) : N === 12 && (U.hours = 0), delete U.afternoon;
          }
        }(O), O;
      };
    }
    return function(p, b, _) {
      _.p.customParseFormat = !0, p && p.parseTwoDigitYear && (f = p.parseTwoDigitYear);
      var v = b.prototype, m = v.parse;
      v.parse = function(a) {
        var c = a.date, y = a.utc, B = a.args;
        this.$u = y;
        var x = B[1];
        if (typeof x == "string") {
          var D = B[2] === !0, O = B[3] === !0, S = D || O, k = B[2];
          O && (k = B[2]), g = this.$locale(), !D && k && (g = _.Ls[k]), this.$d = function(et, F, U) {
            try {
              if (["x", "X"].indexOf(F) > -1)
                return new Date((F === "X" ? 1e3 : 1) * et);
              var Y = E(F)(et), N = Y.year, nt = Y.month, Nt = Y.day, zt = Y.hours, Vt = Y.minutes, qt = Y.seconds, Wt = Y.milliseconds, xt = Y.zone, dt = new Date(), ft = Nt || (N || nt ? 1 : dt.getDate()), gt = N || dt.getFullYear(), at = 0;
              N && !nt || (at = nt > 0 ? nt - 1 : dt.getMonth());
              var ht = zt || 0, pt = Vt || 0, mt = qt || 0, vt = Wt || 0;
              return xt ? new Date(Date.UTC(gt, at, ft, ht, pt, mt, vt + 60 * xt.offset * 1e3)) : U ? new Date(Date.UTC(gt, at, ft, ht, pt, mt, vt)) : new Date(gt, at, ft, ht, pt, mt, vt);
            } catch {
              return new Date("");
            }
          }(c, x, y), this.init(), k && k !== !0 && (this.$L = this.locale(k).$L), S && c != this.format(x) && (this.$d = new Date("")), g = {};
        } else if (x instanceof Array)
          for (var T = x.length, G = 1; G <= T; G += 1) {
            B[1] = x[G - 1];
            var I = _.apply(this, B);
            if (I.isValid()) {
              this.$d = I.$d, this.$L = I.$L, this.init();
              break;
            }
            G === T && (this.$d = new Date(""));
          }
        else
          m.call(this, a);
      };
    };
  });
})(It);
const se = It.exports, Yt = Symbol("CHART_ROWS_KEY"), Rt = Symbol("CONFIG_KEY"), At = Symbol("EMIT_BAR_EVENT_KEY"), Ht = Symbol("BAR_CONTAINER_KEY");
function A() {
  const t = lt(Rt);
  if (!t)
    throw Error("Failed to inject config!");
  return t;
}
function J(t = A()) {
  const { chartStart: r, chartEnd: n, barStart: u, barEnd: d, dateFormat: s } = t, l = R(() => f(r.value)), g = R(() => f(n.value)), f = (e, o) => {
    if (typeof e == "string")
      return z(e, s.value, !0);
    if (o == null)
      throw Error(
        "VueGanttastic - toDayjs: passed a GanttBarObject as value, but did not provide start|end parameter."
      );
    const i = o === "start" ? e[u.value] : e[d.value];
    return z(i, s.value, !0);
  };
  return {
    chartStartDayjs: l,
    chartEndDayjs: g,
    toDayjs: f
  };
}
function Pt() {
  const { precision: t } = A(), { chartStartDayjs: r, chartEndDayjs: n } = J(), u = R(() => {
    switch (t == null ? void 0 : t.value) {
      case "hour":
        return "day";
      case "day":
        return "month";
      case "month":
        return "year";
      default:
        throw new Error(
          "Precision prop incorrect. Must be one of the following: 'hour', 'day', 'month'"
        );
    }
  }), d = {
    hour: "HH",
    date: "DD.MMM ",
    day: "DD.MMM ",
    month: "MMMM YYYY",
    year: "YYYY"
  };
  return {
    timeaxisUnits: R(() => {
      const l = [], g = [], f = u.value === "day" ? "date" : u.value, e = t.value;
      let o = r.value.startOf(e);
      const i = n.value.diff(r.value, "minutes", !0);
      let h = 0, w = o[f]();
      for (; o.isBefore(n.value) || o.isSame(n.value); ) {
        if (o[f]() !== w) {
          let v = 0;
          if (l.length === 0)
            v = o.startOf(f).diff(r.value, "minutes", !0) / i * 100;
          else if (o.isSameOrAfter(n.value))
            v = n.value.diff(
              o.subtract(1, f).startOf(f),
              "minutes",
              !0
            ) / i * 100;
          else {
            const a = o.startOf(f), c = o.subtract(1, f).startOf(f);
            v = a.diff(c, "minutes", !0) / i * 100;
          }
          const m = o.subtract(1, f);
          l.push({
            label: m.format(d[f]),
            value: String(w),
            date: m.toDate(),
            width: String(v) + "%"
          }), h = 0, w = o[f]();
        }
        let b = 0;
        g.length === 0 ? b = o.endOf(e).diff(r.value, "minutes", !0) / i * 100 : o.add(1, e).isSameOrAfter(n.value) ? b = n.value.diff(o.startOf(e), "minutes", !0) / i * 100 : b = o.endOf(e).diff(o.startOf(e), "minutes", !0) / i * 100, g.push({
          label: o.format(d[e]),
          value: String(o[e === "day" ? "date" : e]()),
          date: o.toDate(),
          width: String(b) + "%"
        });
        const _ = o;
        o = o.add(1, e), (o.isBefore(n.value) || o.isSame(n.value)) && (h += o.diff(_, "minutes", !0));
      }
      const E = n.value.isSame(n.value.startOf(f)) ? n.value[f]() - 1 : n.value[f]();
      return l.some((b) => b.value === String(E)) || (h += n.value.diff(
        o.subtract(1, e),
        "minutes",
        !0
      ), l.push({
        label: n.value.format(d[f]),
        value: String(w),
        date: n.value.toDate(),
        width: `${h / i * 100}%`
      })), { upperUnits: l, lowerUnits: g };
    })
  };
}
const le = { class: "g-timeaxis" }, ue = { class: "g-timeunits-container" }, ce = { class: "g-timeunits-container" }, de = /* @__PURE__ */ q({
  __name: "GGanttTimeaxis",
  setup(t) {
    const { precision: r, colors: n } = A(), { timeaxisUnits: u } = Pt();
    return (d, s) => (M(), L("div", le, [
      j("div", ue, [
        (M(!0), L(K, null, ot(C(u).upperUnits, ({ label: l, value: g, date: f, width: e }, o) => (M(), L("div", {
          key: l,
          class: "g-upper-timeunit",
          style: P({
            background: o % 2 === 0 ? C(n).primary : C(n).secondary,
            color: C(n).text,
            width: e
          })
        }, [
          H(d.$slots, "upper-timeunit", {
            label: l,
            value: g,
            date: f
          }, () => [
            it(Q(l), 1)
          ])
        ], 4))), 128))
      ]),
      j("div", ce, [
        (M(!0), L(K, null, ot(C(u).lowerUnits, ({ label: l, value: g, date: f, width: e }, o) => (M(), L("div", {
          key: l,
          class: "g-timeunit",
          style: P({
            background: o % 2 === 0 ? C(n).ternary : C(n).quartenary,
            color: C(n).text,
            flexDirection: C(r) === "hour" ? "column" : "row",
            alignItems: C(r) === "hour" ? "" : "center",
            width: e
          })
        }, [
          H(d.$slots, "timeunit", {
            label: l,
            value: g,
            date: f
          }, () => [
            it(Q(l), 1)
          ]),
          C(r) === "hour" ? (M(), L("div", {
            key: 0,
            class: "g-timeaxis-hour-pin",
            style: P({ background: C(n).text })
          }, null, 4)) : X("", !0)
        ], 4))), 128))
      ])
    ]));
  }
});
const fe = { class: "g-grid-container" }, ge = /* @__PURE__ */ q({
  __name: "GGanttGrid",
  props: {
    highlightedUnits: null
  },
  setup(t) {
    const { colors: r } = A(), { timeaxisUnits: n } = Pt();
    return (u, d) => (M(), L("div", fe, [
      (M(!0), L(K, null, ot(C(n).lowerUnits, ({ label: s, value: l, width: g }) => {
        var f;
        return M(), L("div", {
          key: s,
          class: "g-grid-line",
          style: P({
            width: g,
            background: (f = t.highlightedUnits) != null && f.includes(Number(l)) ? C(r).hoverHighlight : void 0
          })
        }, null, 4);
      }), 128))
    ]));
  }
});
const he = /* @__PURE__ */ q({
  __name: "GGanttBarTooltip",
  props: {
    bar: null,
    modelValue: { type: Boolean }
  },
  setup(t) {
    const r = t, n = {
      hour: "HH:mm",
      day: "DD. MMM HH:mm",
      month: "DD. MMMM YYYY"
    }, u = "cadetblue", { bar: d } = Z(r), s = A(), l = $("0px"), g = $("0px");
    ut(
      () => r.bar,
      async () => {
        var m;
        await St();
        const w = ((m = d == null ? void 0 : d.value) == null ? void 0 : m.ganttBarConfig.id) || "";
        if (!w)
          return;
        const E = document.getElementById(w), { top: p, left: b } = (E == null ? void 0 : E.getBoundingClientRect()) || {
          top: 0,
          left: 0
        }, { rowHeight: _ } = s, v = Math.max(b, 10);
        l.value = `${p + _.value - 10}px`, g.value = `${v}px`;
      },
      { deep: !0, immediate: !0 }
    );
    const f = R(() => {
      var w, E;
      return ((E = (w = d == null ? void 0 : d.value) == null ? void 0 : w.ganttBarConfig.style) == null ? void 0 : E.background) || u;
    }), { toDayjs: e } = J(), { precision: o, font: i } = s, h = R(() => {
      const w = n[o.value];
      if (!(d != null && d.value))
        return "";
      const E = e(d.value, "start").format(w), p = e(d.value, "end").format(w);
      return `${E} \u2013 ${p}`;
    });
    return (w, E) => (M(), st(Kt, { to: "body" }, [
      wt(Qt, {
        name: "g-fade",
        mode: "out-in"
      }, {
        default: V(() => [
          t.modelValue ? (M(), L("div", {
            key: 0,
            class: "g-gantt-tooltip",
            style: P({
              top: l.value,
              left: g.value,
              fontFamily: C(i)
            })
          }, [
            j("div", {
              class: "g-gantt-tooltip-color-dot",
              style: P({ background: C(f) })
            }, null, 4),
            H(w.$slots, "default", {}, () => [
              it(Q(C(h)), 1)
            ])
          ], 4)) : X("", !0)
        ]),
        _: 3
      })
    ]));
  }
});
const _t = {
  default: {
    primary: "#eeeeee",
    secondary: "#E0E0E0",
    ternary: "#F5F5F5",
    quartenary: "#ededed",
    hoverHighlight: "rgba(204, 216, 219, 0.5)",
    text: "#404040",
    background: "white"
  },
  creamy: {
    primary: "#ffe8d9",
    secondary: "#fcdcc5",
    ternary: "#fff6f0",
    quartenary: "#f7ece6",
    hoverHighlight: "rgba(230, 221, 202, 0.5)",
    text: "#542d05",
    background: "white"
  },
  crimson: {
    primary: "#a82039",
    secondary: "#c41238",
    ternary: "#db4f56",
    quartenary: "#ce5f64",
    hoverHighlight: "rgba(196, 141, 141, 0.5)",
    text: "white",
    background: "white"
  },
  dark: {
    primary: "#404040",
    secondary: "#303030",
    ternary: "#353535",
    quartenary: "#383838",
    hoverHighlight: "rgba(159, 160, 161, 0.5)",
    text: "white",
    background: "#525252",
    toast: "#1f1f1f"
  },
  flare: {
    primary: "#e08a38",
    secondary: "#e67912",
    ternary: "#5e5145",
    quartenary: "#665648",
    hoverHighlight: "rgba(196, 141, 141, 0.5)",
    text: "white",
    background: "white"
  },
  fuchsia: {
    primary: "#de1d5a",
    secondary: "#b50b41",
    ternary: "#ff7da6",
    quartenary: "#f2799f",
    hoverHighlight: "rgba(196, 141, 141, 0.5)",
    text: "white",
    background: "white"
  },
  grove: {
    primary: "#3d9960",
    secondary: "#288542",
    ternary: "#72b585",
    quartenary: "#65a577",
    hoverHighlight: "rgba(160, 219, 171, 0.5)",
    text: "white",
    background: "white"
  },
  "material-blue": {
    primary: "#0D47A1",
    secondary: "#1565C0",
    ternary: "#42a5f5",
    quartenary: "#409fed",
    hoverHighlight: "rgba(110, 165, 196, 0.5)",
    text: "white",
    background: "white"
  },
  sky: {
    primary: "#b5e3ff",
    secondary: "#a1d6f7",
    ternary: "#d6f7ff",
    quartenary: "#d0edf4",
    hoverHighlight: "rgba(193, 202, 214, 0.5)",
    text: "#022c47",
    background: "white"
  },
  slumber: {
    primary: "#2a2f42",
    secondary: "#2f3447",
    ternary: "#35394d",
    quartenary: "#2c3044",
    hoverHighlight: "rgba(179, 162, 127, 0.5)",
    text: "#ffe0b3",
    background: "#38383b",
    toast: "#1f1f1f"
  },
  vue: {
    primary: "#258a5d",
    secondary: "#41B883",
    ternary: "#35495E",
    quartenary: "#2a3d51",
    hoverHighlight: "rgba(160, 219, 171, 0.5)",
    text: "white",
    background: "white"
  }
};
var Et;
const tt = typeof window < "u";
tt && ((Et = window == null ? void 0 : window.navigator) == null ? void 0 : Et.userAgent) && /iP(ad|hone|od)/.test(window.navigator.userAgent);
function pe(t) {
  return typeof t == "function" ? t() : C(t);
}
function me(t) {
  return t;
}
function ve(t) {
  return Xt() ? (Zt(t), !0) : !1;
}
function ye(t, r = !0) {
  Jt() ? Tt(t) : r ? t() : St(t);
}
function jt(t) {
  var r;
  const n = pe(t);
  return (r = n == null ? void 0 : n.$el) != null ? r : n;
}
const be = tt ? window : void 0;
tt && window.document;
tt && window.navigator;
tt && window.location;
function we(t, r = !1) {
  const n = $(), u = () => n.value = Boolean(t());
  return u(), ye(u, r), n;
}
const yt = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {}, bt = "__vueuse_ssr_handlers__";
yt[bt] = yt[bt] || {};
yt[bt];
var Ot = Object.getOwnPropertySymbols, Be = Object.prototype.hasOwnProperty, xe = Object.prototype.propertyIsEnumerable, _e = (t, r) => {
  var n = {};
  for (var u in t)
    Be.call(t, u) && r.indexOf(u) < 0 && (n[u] = t[u]);
  if (t != null && Ot)
    for (var u of Ot(t))
      r.indexOf(u) < 0 && xe.call(t, u) && (n[u] = t[u]);
  return n;
};
function Ee(t, r, n = {}) {
  const u = n, { window: d = be } = u, s = _e(u, ["window"]);
  let l;
  const g = we(() => d && "ResizeObserver" in d), f = () => {
    l && (l.disconnect(), l = void 0);
  }, e = ut(() => jt(t), (i) => {
    f(), g.value && d && i && (l = new ResizeObserver(r), l.observe(i, s));
  }, { immediate: !0, flush: "post" }), o = () => {
    f(), e();
  };
  return ve(o), {
    isSupported: g,
    stop: o
  };
}
function Oe(t, r = { width: 0, height: 0 }, n = {}) {
  const u = $(r.width), d = $(r.height);
  return Ee(t, ([s]) => {
    u.value = s.contentRect.width, d.value = s.contentRect.height;
  }, n), ut(() => jt(t), (s) => {
    u.value = s ? r.width : 0, d.value = s ? r.height : 0;
  }), {
    width: u,
    height: d
  };
}
var Ct;
(function(t) {
  t.UP = "UP", t.RIGHT = "RIGHT", t.DOWN = "DOWN", t.LEFT = "LEFT", t.NONE = "NONE";
})(Ct || (Ct = {}));
var Ce = Object.defineProperty, Dt = Object.getOwnPropertySymbols, De = Object.prototype.hasOwnProperty, ke = Object.prototype.propertyIsEnumerable, kt = (t, r, n) => r in t ? Ce(t, r, { enumerable: !0, configurable: !0, writable: !0, value: n }) : t[r] = n, Me = (t, r) => {
  for (var n in r || (r = {}))
    De.call(r, n) && kt(t, n, r[n]);
  if (Dt)
    for (var n of Dt(r))
      ke.call(r, n) && kt(t, n, r[n]);
  return t;
};
const Se = {
  easeInSine: [0.12, 0, 0.39, 0],
  easeOutSine: [0.61, 1, 0.88, 1],
  easeInOutSine: [0.37, 0, 0.63, 1],
  easeInQuad: [0.11, 0, 0.5, 0],
  easeOutQuad: [0.5, 1, 0.89, 1],
  easeInOutQuad: [0.45, 0, 0.55, 1],
  easeInCubic: [0.32, 0, 0.67, 0],
  easeOutCubic: [0.33, 1, 0.68, 1],
  easeInOutCubic: [0.65, 0, 0.35, 1],
  easeInQuart: [0.5, 0, 0.75, 0],
  easeOutQuart: [0.25, 1, 0.5, 1],
  easeInOutQuart: [0.76, 0, 0.24, 1],
  easeInQuint: [0.64, 0, 0.78, 0],
  easeOutQuint: [0.22, 1, 0.36, 1],
  easeInOutQuint: [0.83, 0, 0.17, 1],
  easeInExpo: [0.7, 0, 0.84, 0],
  easeOutExpo: [0.16, 1, 0.3, 1],
  easeInOutExpo: [0.87, 0, 0.13, 1],
  easeInCirc: [0.55, 0, 1, 0.45],
  easeOutCirc: [0, 0.55, 0.45, 1],
  easeInOutCirc: [0.85, 0, 0.15, 1],
  easeInBack: [0.36, 0, 0.66, -0.56],
  easeOutBack: [0.34, 1.56, 0.64, 1],
  easeInOutBack: [0.68, -0.6, 0.32, 1.6]
};
Me({
  linear: me
}, Se);
const Te = { class: "g-gantt-rows-container" }, Le = /* @__PURE__ */ q({
  __name: "GGanttChart",
  props: {
    chartStart: null,
    chartEnd: null,
    precision: { default: "day" },
    barStart: null,
    barEnd: null,
    dateFormat: { default: "YYYY-MM-DD HH:mm" },
    width: { default: "100%" },
    hideTimeaxis: { type: Boolean, default: !1 },
    colorScheme: { default: "default" },
    grid: { type: Boolean, default: !1 },
    pushOnOverlap: { type: Boolean, default: !1 },
    noOverlap: { type: Boolean, default: !1 },
    rowHeight: { default: 40 },
    highlightedUnits: { default: () => [] },
    font: { default: "inherit" }
  },
  emits: ["click-bar", "mousedown-bar", "mouseup-bar", "dblclick-bar", "mouseenter-bar", "mouseleave-bar", "dragstart-bar", "drag-bar", "dragend-bar", "contextmenu-bar"],
  setup(t, { emit: r }) {
    const n = t, { width: u, font: d, colorScheme: s } = Z(n), l = te(), g = R(
      () => typeof s.value != "string" ? s.value : _t[s.value] || _t.default
    ), f = () => {
      var a;
      const v = (a = l.default) == null ? void 0 : a.call(l), m = [];
      return v && v.forEach((c) => {
        var y;
        if ((y = c.props) != null && y.bars) {
          const B = c.props.bars;
          m.push(B);
        } else
          Array.isArray(c.children) && c.children.forEach((B) => {
            var D;
            const x = B;
            if ((D = x == null ? void 0 : x.props) != null && D.bars) {
              const O = x.props.bars;
              m.push(O);
            }
          });
      }), m;
    }, e = $(!1), o = $(!1), i = $(void 0);
    let h;
    const w = (v) => {
      h && clearTimeout(h), h = setTimeout(() => {
        e.value = !0;
      }, 800), i.value = v;
    }, E = () => {
      clearTimeout(h), e.value = !1;
    }, p = (v, m, a, c) => {
      switch (v.type) {
        case "click":
          r("click-bar", { bar: m, e: v, datetime: a });
          break;
        case "mousedown":
          r("mousedown-bar", { bar: m, e: v, datetime: a });
          break;
        case "mouseup":
          r("mouseup-bar", { bar: m, e: v, datetime: a });
          break;
        case "dblclick":
          r("dblclick-bar", { bar: m, e: v, datetime: a });
          break;
        case "mouseenter":
          w(m), r("mouseenter-bar", { bar: m, e: v });
          break;
        case "mouseleave":
          E(), r("mouseleave-bar", { bar: m, e: v });
          break;
        case "dragstart":
          o.value = !0, r("dragstart-bar", { bar: m, e: v });
          break;
        case "drag":
          r("drag-bar", { bar: m, e: v });
          break;
        case "dragend":
          o.value = !1, r("dragend-bar", { bar: m, e: v, movedBars: c });
          break;
        case "contextmenu":
          r("contextmenu-bar", { bar: m, e: v, datetime: a });
          break;
      }
    }, b = $(null), _ = Oe(b);
    return rt(Yt, f), rt(Rt, {
      ...Z(n),
      colors: g,
      chartSize: _
    }), rt(At, p), (v, m) => (M(), L("div", {
      ref_key: "ganttChart",
      ref: b,
      class: "g-gantt-chart",
      style: P({ width: C(u), background: C(g).background, fontFamily: C(d) })
    }, [
      t.hideTimeaxis ? X("", !0) : (M(), st(de, { key: 0 }, {
        "upper-timeunit": V(({ label: a, value: c, date: y }) => [
          H(v.$slots, "upper-timeunit", {
            label: a,
            value: c,
            date: y
          })
        ]),
        timeunit: V(({ label: a, value: c, date: y }) => [
          H(v.$slots, "timeunit", {
            label: a,
            value: c,
            date: y
          })
        ]),
        _: 3
      })),
      t.grid ? (M(), st(ge, {
        key: 1,
        "highlighted-units": t.highlightedUnits
      }, null, 8, ["highlighted-units"])) : X("", !0),
      j("div", Te, [
        H(v.$slots, "default")
      ]),
      wt(he, {
        "model-value": e.value || o.value,
        bar: i.value
      }, {
        default: V(() => [
          H(v.$slots, "bar-tooltip", { bar: i.value })
        ]),
        _: 3
      }, 8, ["model-value", "bar"])
    ], 4));
  }
});
function Bt(t = A()) {
  const { dateFormat: r, chartSize: n } = t, { chartStartDayjs: u, chartEndDayjs: d, toDayjs: s } = J(t), l = R(() => d.value.diff(u.value, "minutes"));
  return {
    mapTimeToPosition: (e) => {
      const o = n.width.value || 0, i = s(e).diff(u.value, "minutes", !0);
      return Math.ceil(i / l.value * o);
    },
    mapPositionToTime: (e) => {
      const o = n.width.value || 0, i = e / o * l.value;
      return u.value.add(i, "minutes").format(r.value);
    }
  };
}
function Mt(t, r = () => null, n = () => null, u = A()) {
  const { barStart: d, barEnd: s, pushOnOverlap: l } = u, g = $(!1);
  let f = 0, e;
  const { mapPositionToTime: o } = Bt(u), { toDayjs: i } = J(u), h = (m) => {
    const a = document.getElementById(t.ganttBarConfig.id);
    if (!a)
      return;
    switch (f = m.clientX - (a.getBoundingClientRect().left || 0), m.target.className) {
      case "g-gantt-bar-handle-left":
        document.body.style.cursor = "ew-resize", e = p;
        break;
      case "g-gantt-bar-handle-right":
        document.body.style.cursor = "ew-resize", e = b;
        break;
      default:
        e = E;
    }
    g.value = !0, window.addEventListener("mousemove", e), window.addEventListener("mouseup", v);
  }, w = () => {
    var c;
    const m = document.getElementById(t.ganttBarConfig.id), a = (c = m == null ? void 0 : m.closest(".g-gantt-row-bars-container")) == null ? void 0 : c.getBoundingClientRect();
    return { barElement: m, barContainer: a };
  }, E = (m) => {
    const { barElement: a, barContainer: c } = w();
    if (!a || !c)
      return;
    const y = a.getBoundingClientRect().width, B = m.clientX - c.left - f, x = B + y;
    _(B, x) || (t[d.value] = o(B), t[s.value] = o(x), r(m, t));
  }, p = (m) => {
    const { barElement: a, barContainer: c } = w();
    if (!a || !c)
      return;
    const y = m.clientX - c.left, B = o(y);
    i(B).isSameOrAfter(i(t, "end")) || (t[d.value] = B, r(m, t));
  }, b = (m) => {
    const { barElement: a, barContainer: c } = w();
    if (!a || !c)
      return;
    const y = m.clientX - c.left, B = o(y);
    i(B).isSameOrBefore(i(t, "start")) || (t[s.value] = B, r(m, t));
  }, _ = (m, a) => {
    if (!l.value)
      return !1;
    const c = t.ganttBarConfig.dragLimitLeft, y = t.ganttBarConfig.dragLimitRight;
    return m && c != null && m < c || a && y != null && a > y;
  }, v = (m) => {
    g.value = !1, document.body.style.cursor = "", window.removeEventListener("mousemove", e), window.removeEventListener("mouseup", v), n(m, t);
  };
  return {
    isDragging: g,
    initDrag: h
  };
}
function Ut() {
  const t = lt(Yt);
  if (!t)
    throw Error("Failed to inject getChartRows!");
  return t;
}
function Ft() {
  const t = lt(At);
  if (!t)
    throw Error("Failed to inject emitBarEvent!");
  return t;
}
function $e() {
  const t = A(), r = Ut(), n = Ft(), { pushOnOverlap: u, barStart: d, barEnd: s, noOverlap: l, dateFormat: g } = t, f = /* @__PURE__ */ new Map(), { toDayjs: e } = J(), o = (a, c) => {
    const { initDrag: y } = Mt(a, h, _, t);
    n({ ...c, type: "dragstart" }, a), y(c), v(a);
  }, i = (a, c) => {
    const y = a.ganttBarConfig.bundle;
    y != null && (r().forEach((B) => {
      B.forEach((x) => {
        if (x.ganttBarConfig.bundle === y) {
          const D = x === a ? _ : () => null, { initDrag: O } = Mt(x, h, D, t);
          O(c), v(x);
        }
      });
    }), n({ ...c, type: "dragstart" }, a));
  }, h = (a, c) => {
    n({ ...a, type: "drag" }, c), w(c);
  }, w = (a) => {
    if (!(u != null && u.value))
      return;
    let c = a, { overlapBar: y, overlapType: B } = E(c);
    for (; y; ) {
      v(y);
      const x = e(c[d.value]), D = e(c[s.value]), O = e(y[d.value]), S = e(y[s.value]);
      let k;
      switch (B) {
        case "left":
          k = S.diff(x, "minutes", !0), y[s.value] = x.format(g.value), y[d.value] = O.subtract(k, "minutes").format(g.value);
          break;
        case "right":
          k = D.diff(O, "minutes", !0), y[d.value] = D.format(g.value), y[s.value] = S.add(k, "minutes").format(g.value);
          break;
        default:
          console.warn(
            "Vue-Ganttastic: One bar is inside of the other one! This should never occur while push-on-overlap is active!"
          );
          return;
      }
      y && (B === "left" || B === "right") && p(y, k, B), c = y, { overlapBar: y, overlapType: B } = E(y);
    }
  }, E = (a) => {
    let c, y, B;
    const x = r().find((T) => T.includes(a)) || [], D = e(a[d.value]), O = e(a[s.value]);
    return { overlapBar: x.find((T) => {
      if (T === a)
        return !1;
      const G = e(T[d.value]), I = e(T[s.value]);
      return c = D.isBetween(G, I), y = O.isBetween(G, I), B = G.isBetween(D, O) || I.isBetween(D, O), c || y || B;
    }), overlapType: c ? "left" : y ? "right" : B ? "between" : null };
  }, p = (a, c, y) => {
    v(a), a.ganttBarConfig.bundle && r().forEach((B) => {
      B.forEach((x) => {
        x.ganttBarConfig.bundle === a.ganttBarConfig.bundle && x !== a && (v(x), b(x, c, y));
      });
    });
  }, b = (a, c, y) => {
    switch (y) {
      case "left":
        a[d.value] = e(a, "start").subtract(c, "minutes").format(g.value), a[s.value] = e(a, "end").subtract(c, "minutes").format(g.value);
        break;
      case "right":
        a[d.value] = e(a, "start").add(c, "minutes").format(g.value), a[s.value] = e(a, "end").add(c, "minutes").format(g.value);
    }
    w(a);
  }, _ = (a, c) => {
    m();
    const y = {
      ...a,
      type: "dragend"
    };
    n(y, c, void 0, new Map(f)), f.clear();
  }, v = (a) => {
    if (!f.has(a)) {
      const c = a[d.value], y = a[s.value];
      f.set(a, { oldStart: c, oldEnd: y });
    }
  }, m = () => {
    if (u.value || !l.value)
      return;
    let a = !1;
    f.forEach((c, y) => {
      const { overlapBar: B } = E(y);
      B != null && (a = !0);
    }), a && f.forEach(({ oldStart: c, oldEnd: y }, B) => {
      B[d.value] = c, B[s.value] = y;
    });
  };
  return {
    initDragOfBar: o,
    initDragOfBundle: i
  };
}
function Ge() {
  const { pushOnOverlap: t } = A(), r = Ut(), n = (l) => {
    const g = [];
    return l != null && r().forEach((f) => {
      f.forEach((e) => {
        e.ganttBarConfig.bundle === l && g.push(e);
      });
    }), g;
  }, u = (l) => {
    if (!t.value || l.ganttBarConfig.pushOnOverlap === !1)
      return;
    for (const f of ["left", "right"]) {
      const e = f, { gapDistanceSoFar: o, bundleBarsAndGapDist: i } = d(
        l,
        0,
        e
      );
      let h = o;
      const w = i;
      if (!w)
        continue;
      for (let p = 0; p < w.length; p++) {
        const b = w[p].bar, _ = w[p].gapDistance;
        n(b.ganttBarConfig.bundle).filter(
          (m) => m !== b
        ).forEach((m) => {
          const a = d(m, _, e), c = a.gapDistanceSoFar, y = a.bundleBarsAndGapDist;
          c != null && (!h || c < h) && (h = c), y.forEach((B) => {
            w.find((x) => x.bar === B.bar) || w.push(B);
          });
        });
      }
      const E = document.getElementById(l.ganttBarConfig.id);
      h != null && e === "left" ? l.ganttBarConfig.dragLimitLeft = E.offsetLeft - h : h != null && e === "right" && (l.ganttBarConfig.dragLimitRight = E.offsetLeft + E.offsetWidth + h);
    }
    n(l.ganttBarConfig.bundle).forEach((f) => {
      f.ganttBarConfig.dragLimitLeft = l.ganttBarConfig.dragLimitLeft, f.ganttBarConfig.dragLimitRight = l.ganttBarConfig.dragLimitRight;
    });
  }, d = (l, g = 0, f) => {
    const e = l.ganttBarConfig.bundle ? [{ bar: l, gapDistance: g }] : [];
    let o = l, i = s(o, f);
    if (f === "left")
      for (; i; ) {
        const h = document.getElementById(o.ganttBarConfig.id), w = document.getElementById(i.ganttBarConfig.id), E = w.offsetLeft + w.offsetWidth;
        if (g += h.offsetLeft - E, i.ganttBarConfig.immobile)
          return { gapDistanceSoFar: g, bundleBarsAndGapDist: e };
        i.ganttBarConfig.bundle && e.push({
          bar: i,
          gapDistance: g
        }), o = i, i = s(i, "left");
      }
    if (f === "right")
      for (; i; ) {
        const h = document.getElementById(o.ganttBarConfig.id), w = document.getElementById(i.ganttBarConfig.id), E = h.offsetLeft + h.offsetWidth;
        if (g += w.offsetLeft - E, i.ganttBarConfig.immobile)
          return { gapDistanceSoFar: g, bundleBarsAndGapDist: e };
        i.ganttBarConfig.bundle && e.push({
          bar: i,
          gapDistance: g
        }), o = i, i = s(i, "right");
      }
    return { gapDistanceSoFar: null, bundleBarsAndGapDist: e };
  }, s = (l, g) => {
    const f = document.getElementById(l.ganttBarConfig.id), e = r().find((i) => i.includes(l)) || [];
    let o = [];
    return g === "left" ? o = e.filter((i) => {
      const h = document.getElementById(i.ganttBarConfig.id);
      return h && h.offsetLeft < f.offsetLeft && i.ganttBarConfig.pushOnOverlap !== !1;
    }) : o = e.filter((i) => {
      const h = document.getElementById(i.ganttBarConfig.id);
      return h && h.offsetLeft > f.offsetLeft && i.ganttBarConfig.pushOnOverlap !== !1;
    }), o.length > 0 ? o.reduce((i, h) => {
      const w = document.getElementById(i.ganttBarConfig.id), E = document.getElementById(h.ganttBarConfig.id), p = Math.abs(w.offsetLeft - f.offsetLeft), b = Math.abs(E.offsetLeft - f.offsetLeft);
      return p < b ? i : h;
    }, o[0]) : null;
  };
  return {
    setDragLimitsOfGanttBar: u
  };
}
const Ie = ["id"], Ye = { class: "g-gantt-bar-label" }, Re = /* @__PURE__ */ j("div", { class: "g-gantt-bar-handle-left" }, null, -1), Ae = /* @__PURE__ */ j("div", { class: "g-gantt-bar-handle-right" }, null, -1), He = /* @__PURE__ */ q({
  __name: "GGanttBar",
  props: {
    bar: null
  },
  setup(t) {
    const r = t, n = Ft(), u = A(), { rowHeight: d } = u, { bar: s } = Z(r), { mapTimeToPosition: l, mapPositionToTime: g } = Bt(), { initDragOfBar: f, initDragOfBundle: e } = $e(), { setDragLimitsOfGanttBar: o } = Ge(), i = $(!1), h = R(() => s.value.ganttBarConfig);
    function w(O) {
      h.value.bundle != null ? e(s.value, O) : f(s.value, O), i.value = !0;
    }
    const E = () => {
      o(s.value), !h.value.immobile && (window.addEventListener("mousemove", w, {
        once: !0
      }), window.addEventListener(
        "mouseup",
        () => {
          window.removeEventListener("mousemove", w), i.value = !1;
        },
        { once: !0 }
      ));
    }, p = lt(Ht), b = (O) => {
      var T;
      O.preventDefault(), O.type === "mousedown" && E();
      const S = (T = p == null ? void 0 : p.value) == null ? void 0 : T.getBoundingClientRect();
      let k;
      S && (k = g(O.clientX - S.left)), n(O, s.value, k);
    }, { barStart: _, barEnd: v, width: m, chartStart: a, chartEnd: c, chartSize: y } = u, B = $(0), x = $(0);
    Tt(() => {
      ut(
        [s, m, a, c, y.width],
        () => {
          B.value = l(s.value[_.value]), x.value = l(s.value[v.value]);
        },
        { deep: !0, immediate: !0 }
      );
    });
    const D = R(() => ({
      ...h.value.style,
      position: "absolute",
      top: `${d.value * 0.1}px`,
      left: `${B.value}px`,
      width: `${x.value - B.value}px`,
      height: `${d.value * 0.8}px`,
      zIndex: i.value ? 3 : 2
    }));
    return (O, S) => (M(), L("div", {
      id: C(h).id,
      class: "g-gantt-bar",
      style: P(C(D)),
      onMousedown: b,
      onClick: b,
      onDblclick: b,
      onMouseenter: b,
      onMouseleave: b,
      onContextmenu: b
    }, [
      j("div", Ye, [
        H(O.$slots, "default", { bar: C(s) }, () => [
          j("div", null, Q(C(h).label || ""), 1)
        ])
      ]),
      C(h).hasHandles ? (M(), L(K, { key: 0 }, [
        Re,
        Ae
      ], 64)) : X("", !0)
    ], 44, Ie));
  }
});
const Pe = /* @__PURE__ */ q({
  __name: "GGanttRow",
  props: {
    label: null,
    bars: null,
    highlightOnHover: { type: Boolean }
  },
  emits: ["drop"],
  setup(t, { emit: r }) {
    const n = t, { rowHeight: u, colors: d } = A(), { highlightOnHover: s } = Z(n), l = $(!1), g = R(() => ({
      height: `${u.value}px`,
      background: (s == null ? void 0 : s.value) && l.value ? d.value.hoverHighlight : null
    })), { mapPositionToTime: f } = Bt(), e = $(null);
    rt(Ht, e);
    const o = (i) => {
      var p;
      const h = (p = e.value) == null ? void 0 : p.getBoundingClientRect();
      if (!h) {
        console.error("Vue-Ganttastic: failed to find bar container element for row.");
        return;
      }
      const w = i.clientX - h.left, E = f(w);
      r("drop", { e: i, datetime: E });
    };
    return (i, h) => (M(), L("div", {
      class: "g-gantt-row",
      style: P(C(g)),
      onDragover: h[0] || (h[0] = ee((w) => l.value = !0, ["prevent"])),
      onDragleave: h[1] || (h[1] = (w) => l.value = !1),
      onDrop: h[2] || (h[2] = (w) => o(w)),
      onMouseover: h[3] || (h[3] = (w) => l.value = !0),
      onMouseleave: h[4] || (h[4] = (w) => l.value = !1)
    }, [
      j("div", {
        class: "g-gantt-row-label",
        style: P({ background: C(d).primary, color: C(d).text })
      }, [
        H(i.$slots, "label", {}, () => [
          it(Q(t.label), 1)
        ])
      ], 4),
      j("div", ne({
        ref_key: "barContainer",
        ref: e,
        class: "g-gantt-row-bars-container"
      }, i.$attrs), [
        wt(ae, {
          name: "bar-transition",
          tag: "div"
        }, {
          default: V(() => [
            (M(!0), L(K, null, ot(t.bars, (w) => (M(), st(He, {
              key: w.ganttBarConfig.id,
              bar: w
            }, {
              default: V(() => [
                H(i.$slots, "bar-label", { bar: w })
              ]),
              _: 2
            }, 1032, ["bar"]))), 128))
          ]),
          _: 3
        })
      ], 16)
    ], 36));
  }
});
function je() {
  z.extend(re), z.extend(oe), z.extend(ie), z.extend(se);
}
const ze = {
  install(t, r) {
    je(), t.component("GGanttChart", Le), t.component("GGanttRow", Pe);
  }
};
function W(t, r = "top") {
  if (!t || typeof document > "u")
    return;
  const n = document.head, u = document.createElement("style");
  r === "top" && n.firstChild ? n.insertBefore(u, n.firstChild) : n.appendChild(u), u.appendChild(document.createTextNode(t));
}
W(`
.g-gantt-chart {
  position: relative;
  display: flex;
  flex-direction: column;
  overflow-x: hidden;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  border-radius: 5px;
  font-feature-settings: "tnum";
  font-variant-numeric: tabular-nums;
}
.g-gantt-rows-container {
  position: relative;
}
`, "top");
W(`
.g-gantt-row {
  width: 100%;
  transition: background 0.4s;
  position: relative;
}
.g-gantt-row > .g-gantt-row-bars-container {
  position: relative;
  border-top: 1px solid #eaeaea;
  width: 100%;
  border-bottom: 1px solid #eaeaea;
}
.g-gantt-row-label {
  position: absolute;
  top: 0;
  left: 0px;
  padding: 0px 8px;
  display: flex;
  align-items: center;
  height: 60%;
  min-height: 20px;
  font-size: 0.8em;
  font-weight: bold;
  border-bottom-right-radius: 6px;
  background: #f2f2f2;
  z-index: 3;
  box-shadow: 0px 1px 4px 0px rgba(0, 0, 0, 0.6);
}
.bar-transition-leave-active,
.bar-transition-enter-active {
  transition: all 0.2s;
}
.bar-transition-enter-from,
.bar-transition-leave-to {
  transform: scale(0.8);
  opacity: 0;
}
`, "top");
W(`
.g-grid-container {
  position: absolute;
  top: 0;
  left: 0%;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: space-between;
}
.g-grid-line {
  width: 1px;
  height: 100%;
  border-left: 1px solid #eaeaea;
}
`, "top");
W(`
.g-timeaxis {
  position: sticky;
  top: 0;
  width: 100%;
  height: 8vh;
  min-height: 75px;
  background: white;
  z-index: 4;
  box-shadow: 0px 1px 3px 2px rgba(50, 50, 50, 0.5);
  display: flex;
  flex-direction: column;
}
.g-timeunits-container {
  display: flex;
  width: 100%;
  height: 50%;
}
.g-timeunit {
  height: 100%;
  font-size: 65%;
  display: flex;
  flex-direction: column;
  justify-content: center;
}
.g-upper-timeunit {
  display: flex;
  height: 100%;
  justify-content: center;
  align-items: center;
}
.g-timeaxis-hour-pin {
  width: 1px;
  height: 10px;
}
`, "top");
W(`
.g-gantt-tooltip {
  position: fixed;
  background: black;
  color: white;
  z-index: 4;
  font-size: 0.85em;
  padding: 5px;
  border-radius: 3px;
  transition: opacity 0.2s;
  display: flex;
  align-items: center;
  font-feature-settings: "tnum";
  font-variant-numeric: tabular-nums;
}
.g-gantt-tooltip:before {
  content: "";
  position: absolute;
  top: 0;
  left: 10%;
  width: 0;
  height: 0;
  border: 10px solid transparent;
  border-bottom-color: black;
  border-top: 0;
  margin-left: -5px;
  margin-top: -5px;
}
.g-gantt-tooltip-color-dot {
  width: 8px;
  height: 8px;
  border-radius: 100%;
  margin-right: 4px;
}
.g-fade-enter-active,
.g-fade-leave-active {
  transition: opacity 0.3s ease;
}
.g-fade-enter-from,
.g-fade-leave-to {
  opacity: 0;
}
`, "top");
W(`
.g-gantt-bar {
  display: flex;
  justify-content: center;
  align-items: center;
  background: cadetblue;
  overflow: hidden;
}
.g-gantt-bar-label {
  width: 100%;
  height: 100%;
  box-sizing: border-box;
  padding: 0 14px 0 14px; /* 14px is the width of the handle */
  display: flex;
  justify-content: center;
  align-items: center;
}
.g-gantt-bar-label > * {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
.g-gantt-bar-handle-left,
.g-gantt-bar-handle-right {
  position: absolute;
  width: 10px;
  height: 100%;
  background: white;
  opacity: 0.7;
  border-radius: 0px;
  cursor: ew-resize;
  top: 0;
}
.g-gantt-bar-handle-left {
  left: 0;
}
.g-gantt-bar-handle-right {
  right: 0;
}
.g-gantt-bar-label img {
  pointer-events: none;
}
`, "top");
export {
  Le as GGanttChart,
  Pe as GGanttRow,
  ze as default,
  je as extendDayjs,
  ze as ganttastic
};
